---
title: "class06: Functions"
author: "Aigerim (PID: 09919142)"
date: 01/26/24
format: pdf
---


# Our first simple silly function

All functions in R have 3 parts:

- a name
- inpur argument (none, one or more)
- a body

A function to add two numbers

```{r sillyfun}
sillyadd <- function(x, y = 1) {
  x + y
  
}
```

Let me try out this function.

```{r}
sillyadd(100)
```

# Let's do something more useful

```{r}
student1 <- c(100, 100, 100, 100, 100, 100, 100, 90)
student2 <- c(100, NA, 90, 90, 90, 90, 97, 80)
student3 <- c(90, NA, NA, NA, NA, NA, NA, NA)
```


```{r}
mean(student1)
```

```{r}
student1
which.min(student1)
```
# in [-8] we remove number in the position 8 by adding "-"

```{r}
student1
mean(student1[ -8 ])
```
# Collected form it

```{r}
x <- student1
# Find lowest value
ind <- which.min(x)
# Exclude lowest value and find mean
mean(x[-ind])
```

```{r}
x <- student2
x
# Find lowest value
ind <- which.min(x)
ind
# Exclude lowest value and find mean
mean(x[-ind], na.rm = T)
```

```{r}
student3
```

```{r}
x <- student3
# Find lowest value
ind <- which.min(x)
# Exclude lowest value and find mean
mean(x[-ind], na.rm = T)
```

# Find and replace the NA with zero

```{r}
x <- 1:5
x
x[x == 3] <- 10000
x
```

```{r}
x <- student2
x
x[is.na(x)] <- 0
x
```

```{r}
x <- student3
x

x[is.na(x)] <- 0
mean(x[-which.min(x)])
```

```{r}
grade <- function(x){
  x[is.na(x)] <- 0
  mean(x[-which.min(x)])
}
```


```{r}
grade(student1)
grade(student2)
grade(student3)
```

>**Q1** Write a function grade() to determine an overall grade from a vector of student homework assignment scores dropping the lowest single score. If a student misses a homework (i.e. has an NA value) this can be used as a score to be potentially dropped. Your final function should be adquately explained with code comments and be able to work on an example class gradebook such as this one in CSV format: “https://tinyurl.com/gradeinput” 


```{r}
url <-"https://tinyurl.com/gradeinput"
gradebook <- read.csv(url, row.names = 1)
read.csv(url, row.names = 1)
```

# Now use our `grade()` function to grade the whole class
# We can "apply" our new `grade()` function over wither the row or the columns of the gradebook, with the MARGIN

```{r}
results <- apply(gradebook, 1, grade)
apply(gradebook, 1, grade)
```

> **Q2** Using your grade() function and the supplied gradebook, Who is the top scoring student overall in the gradebook? 

```{r}
which.max(results)
```

>**Q3** From your analysis of the gradebook, which homework was toughest on students (i.e. obtained the lowest scores overall)? 

```{r}
apply(gradebook, 2, mean, na.rm=T)
```

```{r}
#grade <- function(x, drop.lowest=TRUE) {
  #x[is.na(x)] <- 0
 
 #if(drop.lowest) {
    #ans <- mean((x[-which.min(x)]) 
 #}
 #else {
   #ans <- mean(x)
 #}
 #ans
#}
```

>**Q4** Optional Extension: From your analysis of the gradebook, which homework was most predictive of overall score (i.e. highest correlation with average grade score)?


```{r}
mask <- gradebook
mask[is.na(mask)] <- 0
mask
cor(mask$hw5, results)
cor(mask$hw3, results)
```
# Let's use apply to do this for the whole course!

```{r}
apply(mask, 2, cor, y=results) 
```


